# generated by datamodel-codegen:
#   filename:  ProvisionofSimulationModelsAAS_schema.json
#   timestamp: 2024-09-29T13:52:37+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class BinaryConnector(BaseModel):
    id_short: str = Field(..., examples=['BinaryConnector'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/BinaryConnector/1/0'],
        title='Semantic Id',
    )
    binary_con_name: Optional[str] = Field(..., examples=[], title='Binary Con Name')
    binary_con_description: Optional[str] = Field(
        ..., examples=[], title='Binary Con Description'
    )


class Email(BaseModel):
    id_short: str = Field(..., examples=['Email'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ..., examples=['0173-1#02-AAQ836#005'], title='Semantic Id'
    )
    type_of_email_address: Optional[str] = Field(
        ..., examples=[], title='Type Of Email Address'
    )
    email_address: Optional[str] = Field(..., examples=[], title='Email Address')
    type_of_public_key: Optional[str] = Field(
        ..., examples=[], title='Type Of Public Key'
    )
    public_key: Optional[str] = Field(..., examples=[], title='Public Key')


class ModelFileVersion(BaseModel):
    id_short: str = Field(..., examples=['ModelFileVersion'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/ModelFileVersion/1/0'],
        title='Semantic Id',
    )
    model_version_id: Optional[str] = Field(..., examples=[], title='Model Version Id')
    model_preview_image: None = Field(..., examples=[], title='Model Preview Image')
    digital_file: None = Field(..., examples=[], title='Digital File')
    model_file_release_notes_txt: Optional[str] = Field(
        ..., examples=[], title='Model File Release Notes Txt'
    )
    model_file_release_notes_file: None = Field(
        ..., examples=[], title='Model File Release Notes File'
    )


class Phone(BaseModel):
    id_short: str = Field(..., examples=['Phone'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=[
            'https://admin-shell.io/zvei/nameplate/1/0/ContactInformations/ContactInformation/Phone'
        ],
        title='Semantic Id',
    )
    type_of_telephone: Optional[str] = Field(
        ..., examples=[], title='Type Of Telephone'
    )
    telephone_number: Optional[str] = Field(..., examples=[], title='Telephone Number')
    available_time: Optional[str] = Field(..., examples=[], title='Available Time')


class SimModManufacturerInformation(BaseModel):
    id_short: str = Field(
        ..., examples=['SimModManufacturerInformation'], title='Id Short'
    )
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=[
            'https://admin-shell.io/idta/SimulationModels/SimModManufacturerInformation/1/0'
        ],
        title='Semantic Id',
    )
    company: Optional[str] = Field(..., examples=[], title='Company')
    language: Optional[str] = Field(..., examples=[], title='Language')
    email: Optional[Email] = Field(..., examples=[])
    phone: Optional[Phone] = Field(..., examples=[])


class SimPurpose(BaseModel):
    id_short: str = Field(..., examples=['SimPurpose'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/SimPurpose/1/0'],
        title='Semantic Id',
    )
    pos_sim_purpose: Optional[str] = Field(..., examples=[], title='Pos Sim Purpose')
    neg_sim_purpose: Optional[str] = Field(..., examples=[], title='Neg Sim Purpose')


class TestedToolSolverAlgorithm(BaseModel):
    id_short: str = Field(..., examples=['TestedToolSolverAlgorithm'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=[
            'https://admin-shell.io/idta/SimulationModels/TestedToolSolverAlgorithm/1/0'
        ],
        title='Semantic Id',
    )
    solver_algorithm: Optional[str] = Field(..., examples=[], title='Solver Algorithm')
    tool_solver_further_description: Optional[str] = Field(
        ..., examples=[], title='Tool Solver Further Description'
    )
    tolerance: Optional[float] = Field(..., examples=[], title='Tolerance')


class Variable(BaseModel):
    id_short: str = Field(..., examples=['Variable'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/Variable/1/0'],
        title='Semantic Id',
    )
    variable_name: Optional[str] = Field(..., examples=[], title='Variable Name')
    range: Optional[str] = Field(..., examples=[], title='Range')
    variable_type: Optional[str] = Field(..., examples=[], title='Variable Type')
    variable_description: Optional[str] = Field(
        ..., examples=[], title='Variable Description'
    )
    unit_list: Optional[str] = Field(..., examples=[], title='Unit List')
    unit_description: Optional[str] = Field(..., examples=[], title='Unit Description')
    variable_causality: Optional[str] = Field(
        ..., examples=[], title='Variable Causality'
    )
    variable_prefix: Optional[str] = Field(..., examples=[], title='Variable Prefix')


class ModelFile(BaseModel):
    id_short: str = Field(..., examples=['ModelFile'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/ModelFile/1/0'],
        title='Semantic Id',
    )
    model_file_type: Optional[str] = Field(..., examples=[], title='Model File Type')
    model_file_version: Optional[ModelFileVersion] = Field(..., examples=[])


class PortsConnector(BaseModel):
    id_short: str = Field(..., examples=['PortsConnector'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/PortsConnector/1/0'],
        title='Semantic Id',
    )
    port_connector_name: Optional[str] = Field(
        ..., examples=[], title='Port Connector Name'
    )
    port_con_description: Optional[str] = Field(
        ..., examples=[], title='Port Con Description'
    )
    variable: Optional[Variable] = Field(..., examples=[])


class SolverAndTolerances(BaseModel):
    id_short: str = Field(..., examples=['SolverAndTolerances'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=[
            'https://admin-shell.io/idta/SimulationModels/SolverAndTolerances/1/0'
        ],
        title='Semantic Id',
    )
    step_size_control_needed: Optional[bool] = Field(
        ..., examples=[], title='Step Size Control Needed'
    )
    fixed_step_size: Optional[float] = Field(..., examples=[], title='Fixed Step Size')
    stiff_solver_needed: Optional[bool] = Field(
        ..., examples=[], title='Stiff Solver Needed'
    )
    solver_included: Optional[bool] = Field(..., examples=[], title='Solver Included')
    tested_tool_solver_algorithm: Optional[TestedToolSolverAlgorithm] = Field(
        ..., examples=[]
    )


class Ports(BaseModel):
    id_short: str = Field(..., examples=['Ports'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/Ports/1/0'],
        title='Semantic Id',
    )
    ports_connector: Optional[PortsConnector] = Field(..., examples=[])
    binary_connector: Optional[BinaryConnector] = Field(..., examples=[])


class SimulationTool(BaseModel):
    id_short: str = Field(..., examples=['SimulationTool'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/SimulationTool/1/0'],
        title='Semantic Id',
    )
    sim_tool_name: Optional[str] = Field(..., examples=[], title='Sim Tool Name')
    dependency_sim_tool: Optional[str] = Field(
        ..., examples=[], title='Dependency Sim Tool'
    )
    compiler: Optional[str] = Field(..., examples=[], title='Compiler')
    solver_and_tolerances: Optional[SolverAndTolerances] = Field(..., examples=[])


class Environment(BaseModel):
    id_short: str = Field(..., examples=['Environment'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/Environment/1/0'],
        title='Semantic Id',
    )
    operating_system: Optional[str] = Field(..., examples=[], title='Operating System')
    tool_environment: Optional[str] = Field(..., examples=[], title='Tool Environment')
    dependency_environment: Optional[str] = Field(
        ..., examples=[], title='Dependency Environment'
    )
    visualization_information: Optional[str] = Field(
        ..., examples=[], title='Visualization Information'
    )
    simulation_tool: Optional[SimulationTool] = Field(..., examples=[])


class SimulationModel(BaseModel):
    id_short: str = Field(..., examples=['SimulationModel'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/SimulationModel/1/0'],
        title='Semantic Id',
    )
    summary: Optional[str] = Field(..., examples=[], title='Summary')
    sim_purpose: Optional[SimPurpose] = Field(..., examples=[])
    type_of_model: Optional[str] = Field(..., examples=[], title='Type Of Model')
    scope_of_model: Optional[str] = Field(..., examples=[], title='Scope Of Model')
    license_model: Optional[str] = Field(..., examples=[], title='License Model')
    engineering_domain: Optional[str] = Field(
        ..., examples=[], title='Engineering Domain'
    )
    environment: Optional[Environment] = Field(..., examples=[])
    ref_sim_documentation: None = Field(..., examples=[], title='Ref Sim Documentation')
    model_file: Optional[ModelFile] = Field(..., examples=[])
    param_method: Optional[str] = Field(..., examples=[], title='Param Method')
    param_file: None = Field(..., examples=[], title='Param File')
    init_state_method: Optional[str] = Field(
        ..., examples=[], title='Init State Method'
    )
    init_state_file: None = Field(..., examples=[], title='Init State File')
    default_sim_time: Optional[float] = Field(
        ..., examples=[], title='Default Sim Time'
    )
    sim_mod_manufacturer_information: Optional[SimModManufacturerInformation] = Field(
        ..., examples=[]
    )
    ports: Optional[Ports] = Field(..., examples=[])


class SimulationModels(BaseModel):
    id_short: str = Field(..., examples=['SimulationModels'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SubmodelTemplate/SimulationModels/1/0'],
        title='Id',
    )
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SimulationModels/SimulationModels/1/0'],
        title='Semantic Id',
    )
    simulation_model: Optional[SimulationModel] = Field(..., examples=[])


class ProvisionofSimulationModelsAAS(BaseModel):
    id_short: str = Field(
        ..., examples=['ProvisionofSimulationModelsAAS'], title='Id Short'
    )
    description: str = Field(..., examples=[''], title='Description')
    id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/aas/SimulationModels/1/0'],
        title='Id',
    )
    simulation_models: Optional[SimulationModels] = Field(..., examples=[])
