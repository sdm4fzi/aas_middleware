{
    "openapi": "3.1.0",
    "info": {
        "title": "aas2openapi",
        "description": "\n             The aas2openapi middleware allows to convert aas models to pydantic models and generate a REST or GraphQL API from them.\n                ",
        "contact": {
            "name": "Sebastian Behrendt",
            "email": "sebastian.behrendt@kit.edu"
        },
        "license": {
            "name": "MIT License",
            "url": "https://mit-license.org/"
        },
        "version": "0.2.4"
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Root",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Root  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Product/": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Items",
                "operationId": "get_items_Product__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    },
                                    "type": "array",
                                    "title": "Response Get Items Product  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Product__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Product  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Product/{item_id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Product__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Product__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Product  Item Id  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Product__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Product/{item_id}/ProductInformation/": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Product__item_id__ProductInformation__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductInformation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Product__item_id__ProductInformation__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductInformation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Product  Item Id  Productinformation  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Product__item_id__ProductInformation__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductInformation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Product  Item Id  Productinformation  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Product__item_id__ProductInformation__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Product/{item_id}/ConstructionData/": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Product__item_id__ConstructionData__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstructionData"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Product__item_id__ConstructionData__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConstructionData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Product  Item Id  Constructiondata  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Product__item_id__ConstructionData__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConstructionData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Product  Item Id  Constructiondata  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Product__item_id__ConstructionData__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Product/{item_id}/BOM/": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Product__item_id__BOM__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BOM"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Product__item_id__BOM__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BOM"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Product  Item Id  Bom  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Product__item_id__BOM__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BOM"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Product  Item Id  Bom  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Product__item_id__BOM__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Product/{item_id}/ProcessReference/": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Product__item_id__ProcessReference__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessReference"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Product__item_id__ProcessReference__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessReference"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Product  Item Id  Processreference  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Product__item_id__ProcessReference__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessReference"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Product  Item Id  Processreference  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Product__item_id__ProcessReference__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Items",
                "operationId": "get_items_Resource__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Resource"
                                    },
                                    "type": "array",
                                    "title": "Response Get Items Resource  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Resource__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Resource"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Resource  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{item_id}": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Resource__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Resource__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Resource"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Resource  Item Id  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Resource__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{item_id}/ResourceInformation/": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Resource__item_id__ResourceInformation__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceInformation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Resource__item_id__ResourceInformation__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceInformation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Resource  Item Id  Resourceinformation  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Resource__item_id__ResourceInformation__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceInformation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Resource  Item Id  Resourceinformation  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Resource__item_id__ResourceInformation__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{item_id}/Capabilities/": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Resource__item_id__Capabilities__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Capabilities"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Resource__item_id__Capabilities__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Capabilities"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Resource  Item Id  Capabilities  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Resource__item_id__Capabilities__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Capabilities"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Resource  Item Id  Capabilities  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Resource__item_id__Capabilities__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{item_id}/ConstructionData/": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Resource__item_id__ConstructionData__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstructionData"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Resource__item_id__ConstructionData__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConstructionData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Resource  Item Id  Constructiondata  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Resource__item_id__ConstructionData__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConstructionData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Resource  Item Id  Constructiondata  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Resource__item_id__ConstructionData__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{item_id}/ResourceConfiguration/": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Resource__item_id__ResourceConfiguration__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceConfiguration"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Resource__item_id__ResourceConfiguration__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Resource  Item Id  Resourceconfiguration  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Resource__item_id__ResourceConfiguration__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Resource  Item Id  Resourceconfiguration  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Resource__item_id__ResourceConfiguration__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{item_id}/ControlLogic/": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Resource__item_id__ControlLogic__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ControlLogic"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Resource__item_id__ControlLogic__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ControlLogic"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Resource  Item Id  Controllogic  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Resource__item_id__ControlLogic__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ControlLogic"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Resource  Item Id  Controllogic  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Resource__item_id__ControlLogic__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{item_id}/ResourceInterfaces/": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Resource__item_id__ResourceInterfaces__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceInterfaces"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Resource__item_id__ResourceInterfaces__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceInterfaces"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Resource  Item Id  Resourceinterfaces  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Resource__item_id__ResourceInterfaces__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceInterfaces"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Resource  Item Id  Resourceinterfaces  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Resource__item_id__ResourceInterfaces__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{item_id}/ResourcePerformances/": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Resource__item_id__ResourcePerformances__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourcePerformances"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Resource__item_id__ResourcePerformances__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourcePerformances"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Resource  Item Id  Resourceperformances  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Resource__item_id__ResourcePerformances__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourcePerformances"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Resource  Item Id  Resourceperformances  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Resource__item_id__ResourcePerformances__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Get Items",
                "operationId": "get_items_Procedure__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Procedure"
                                    },
                                    "type": "array",
                                    "title": "Response Get Items Procedure  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Procedure__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Procedure"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Procedure  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/{item_id}": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Procedure__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Procedure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Procedure__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Procedure"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Procedure  Item Id  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Procedure__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/{item_id}/ProcedureInformation/": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Procedure__item_id__ProcedureInformation__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcedureInformation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Procedure__item_id__ProcedureInformation__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcedureInformation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Procedure  Item Id  Procedureinformation  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/{item_id}/ProcessAttributes/": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Procedure__item_id__ProcessAttributes__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Procedure__item_id__ProcessAttributes__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessAttributes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Procedure  Item Id  Processattributes  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/{item_id}/ExecutionModel/": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Procedure__item_id__ExecutionModel__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExecutionModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Procedure__item_id__ExecutionModel__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExecutionModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Procedure  Item Id  Executionmodel  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Procedure__item_id__ExecutionModel__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExecutionModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Procedure  Item Id  Executionmodel  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Procedure__item_id__ExecutionModel__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/{item_id}/TimeModel/": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Procedure__item_id__TimeModel__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Procedure__item_id__TimeModel__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Procedure  Item Id  Timemodel  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Process/": {
            "get": {
                "tags": [
                    "Process"
                ],
                "summary": "Get Items",
                "operationId": "get_items_Process__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Process"
                                    },
                                    "type": "array",
                                    "title": "Response Get Items Process  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Process"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Process__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Process"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Process  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Process/{item_id}": {
            "get": {
                "tags": [
                    "Process"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Process__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Process"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Process__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Process"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Process  Item Id  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Process"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Process__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Process/{item_id}/ProcessInformation/": {
            "get": {
                "tags": [
                    "Process"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Process__item_id__ProcessInformation__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessInformation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Process"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Process__item_id__ProcessInformation__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessInformation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Process  Item Id  Processinformation  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Process/{item_id}/ProcessModel/": {
            "get": {
                "tags": [
                    "Process"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Process__item_id__ProcessModel__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Process"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Process__item_id__ProcessModel__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Process  Item Id  Processmodel  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Process/{item_id}/ProcessAttributes/": {
            "get": {
                "tags": [
                    "Process"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Process__item_id__ProcessAttributes__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Process"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Process__item_id__ProcessAttributes__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessAttributes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Process  Item Id  Processattributes  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Order/": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Items",
                "operationId": "get_items_Order__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    },
                                    "type": "array",
                                    "title": "Response Get Items Order  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Order__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Order  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Order/{item_id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Order__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Order__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Order  Item Id  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Order__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Order/{item_id}/GeneralInformation/": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Order__item_id__GeneralInformation__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralInformation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Order__item_id__GeneralInformation__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeneralInformation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Order  Item Id  Generalinformation  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Order/{item_id}/OrderSchedule/": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Order__item_id__OrderSchedule__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderSchedule"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Order__item_id__OrderSchedule__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderSchedule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Order  Item Id  Orderschedule  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Order__item_id__OrderSchedule__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderSchedule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Order  Item Id  Orderschedule  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Order__item_id__OrderSchedule__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Order/{item_id}/OrderedProducts/": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Order__item_id__OrderedProducts__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderedProducts"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Order__item_id__OrderedProducts__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderedProducts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Order  Item Id  Orderedproducts  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Order__item_id__OrderedProducts__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderedProducts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Order  Item Id  Orderedproducts  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Order__item_id__OrderedProducts__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Performance/": {
            "get": {
                "tags": [
                    "Performance"
                ],
                "summary": "Get Items",
                "operationId": "get_items_Performance__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Performance"
                                    },
                                    "type": "array",
                                    "title": "Response Get Items Performance  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Performance"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Performance__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Performance"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Performance  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Performance/{item_id}": {
            "get": {
                "tags": [
                    "Performance"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Performance__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Performance"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Performance"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Performance__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Performance"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Performance  Item Id  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Performance"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Performance__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Performance/{item_id}/KeyPerformanceIndicators/": {
            "get": {
                "tags": [
                    "Performance"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Performance__item_id__KeyPerformanceIndicators__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeyPerformanceIndicators"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Performance"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Performance__item_id__KeyPerformanceIndicators__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KeyPerformanceIndicators"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Performance  Item Id  Keyperformanceindicators  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Performance/{item_id}/EventLog/": {
            "get": {
                "tags": [
                    "Performance"
                ],
                "summary": "Get Item",
                "operationId": "get_item_Performance__item_id__EventLog__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventLog"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Performance"
                ],
                "summary": "Put Item",
                "operationId": "put_item_Performance__item_id__EventLog__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventLog"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Performance  Item Id  Eventlog  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Performance"
                ],
                "summary": "Post Item",
                "operationId": "post_item_Performance__item_id__EventLog__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventLog"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Performance  Item Id  Eventlog  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Performance"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_Performance__item_id__EventLog__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChangeScenario/": {
            "get": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Get Items",
                "operationId": "get_items_ChangeScenario__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ChangeScenario"
                                    },
                                    "type": "array",
                                    "title": "Response Get Items Changescenario  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Post Item",
                "operationId": "post_item_ChangeScenario__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeScenario"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Changescenario  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChangeScenario/{item_id}": {
            "get": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Get Item",
                "operationId": "get_item_ChangeScenario__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangeScenario"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Put Item",
                "operationId": "put_item_ChangeScenario__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeScenario"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Changescenario  Item Id  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_ChangeScenario__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChangeScenario/{item_id}/ChangeDriver/": {
            "get": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Get Item",
                "operationId": "get_item_ChangeScenario__item_id__ChangeDriver__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangeDriver"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Put Item",
                "operationId": "put_item_ChangeScenario__item_id__ChangeDriver__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeDriver"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Changescenario  Item Id  Changedriver  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Post Item",
                "operationId": "post_item_ChangeScenario__item_id__ChangeDriver__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeDriver"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Changescenario  Item Id  Changedriver  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_ChangeScenario__item_id__ChangeDriver__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChangeScenario/{item_id}/ReceptorKeyFigure/": {
            "get": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Get Item",
                "operationId": "get_item_ChangeScenario__item_id__ReceptorKeyFigure__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReceptorKeyFigure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Put Item",
                "operationId": "put_item_ChangeScenario__item_id__ReceptorKeyFigure__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReceptorKeyFigure"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Changescenario  Item Id  Receptorkeyfigure  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Post Item",
                "operationId": "post_item_ChangeScenario__item_id__ReceptorKeyFigure__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReceptorKeyFigure"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Changescenario  Item Id  Receptorkeyfigure  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_ChangeScenario__item_id__ReceptorKeyFigure__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChangeScenario/{item_id}/ReconfigurationConstraints/": {
            "get": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Get Item",
                "operationId": "get_item_ChangeScenario__item_id__ReconfigurationConstraints__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconfigurationConstraints"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Put Item",
                "operationId": "put_item_ChangeScenario__item_id__ReconfigurationConstraints__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconfigurationConstraints"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Changescenario  Item Id  Reconfigurationconstraints  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Post Item",
                "operationId": "post_item_ChangeScenario__item_id__ReconfigurationConstraints__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconfigurationConstraints"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Changescenario  Item Id  Reconfigurationconstraints  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_ChangeScenario__item_id__ReconfigurationConstraints__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChangeScenario/{item_id}/ReconfigurationOptions/": {
            "get": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Get Item",
                "operationId": "get_item_ChangeScenario__item_id__ReconfigurationOptions__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconfigurationOptions"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Put Item",
                "operationId": "put_item_ChangeScenario__item_id__ReconfigurationOptions__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconfigurationOptions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Changescenario  Item Id  Reconfigurationoptions  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Post Item",
                "operationId": "post_item_ChangeScenario__item_id__ReconfigurationOptions__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconfigurationOptions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Changescenario  Item Id  Reconfigurationoptions  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_ChangeScenario__item_id__ReconfigurationOptions__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChangeScenario/{item_id}/ReconfigurationObjectives/": {
            "get": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Get Item",
                "operationId": "get_item_ChangeScenario__item_id__ReconfigurationObjectives__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconfigurationObjectives"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Put Item",
                "operationId": "put_item_ChangeScenario__item_id__ReconfigurationObjectives__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconfigurationObjectives"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Put Item Changescenario  Item Id  Reconfigurationobjectives  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Post Item",
                "operationId": "post_item_ChangeScenario__item_id__ReconfigurationObjectives__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconfigurationObjectives"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Post Item Changescenario  Item Id  Reconfigurationobjectives  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ChangeScenario"
                ],
                "summary": "Delete Item",
                "operationId": "delete_item_ChangeScenario__item_id__ReconfigurationObjectives__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ActivityTypeEnum": {
                "type": "string",
                "enum": [
                    "Start",
                    "End",
                    "StartInterupt",
                    "EndInterupt"
                ],
                "title": "ActivityTypeEnum",
                "description": "Enum to describe the type of an activity."
            },
            "AttributePredicate": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "attribute_carrier": {
                        "type": "string",
                        "title": "Attribute Carrier"
                    },
                    "general_attribute": {
                        "type": "string",
                        "title": "General Attribute"
                    },
                    "predicate_type": {
                        "type": "string",
                        "title": "Predicate Type"
                    },
                    "attribute_value": {
                        "type": "string",
                        "title": "Attribute Value"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "attribute_carrier",
                    "general_attribute",
                    "predicate_type",
                    "attribute_value"
                ],
                "title": "AttributePredicate",
                "description": "The SubmodelElementCollection “AttributePredicate” contains 4 SubmodelElements that allow to describe one specific process attribute in a structured, self-describing and interoperable way.\n\nArgs:\n    description (Optional[str]): The description of the attribute predicate.\n    id_short (Optional[str]): The short id of the attribute predicate.\n    semantic_id (Optional[str]): The semantic id of the attribute predicate.\n    attribute_carrier (str): Semantic reference to the general type of process or procedure that is describeded by this attribute, e.g. a semantic reference to a milling process definition.\n    general_attribute (str): Describes semantically the type of attribute that is specified for the attribute carrier, e.g. rotation speed.\n    predicate_type (str): Describes semantically what is specified by the value and how to compare it, e.g. requires_to_be, equals, within_range, ....\n    attribute_value (str): Describes value of the attribute that is specified for."
            },
            "BOM": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "sub_product_count": {
                        "type": "integer",
                        "title": "Sub Product Count"
                    },
                    "sub_products": {
                        "items": {
                            "$ref": "#/components/schemas/SubProduct"
                        },
                        "type": "array",
                        "title": "Sub Products"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "BOM",
                "description": "Submodel to describe the bill of materials of a product.\n\nArgs:\n    id (str): The id of the bill of materials.\n    description (Optional[str]): The description of the bill of materials.\n    id_short (Optional[str]): The short id of the bill of materials.\n    semantic_id (Optional[str]): The semantic id of the bill of materials.\n    sub_product_count (Optional[int]): The total number of subproducts (depht 1)\n    sub_products (Optional[List[SubmodelElementCollection]]): The list of subproducts contained in the product (depht 1)"
            },
            "BinomialDistribution": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "binomial"
                        ],
                        "title": "Type"
                    },
                    "trials": {
                        "type": "integer",
                        "title": "Trials"
                    },
                    "probability": {
                        "type": "number",
                        "title": "Probability"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "type",
                    "trials",
                    "probability"
                ],
                "title": "BinomialDistribution",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "Capabilities": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "procedures_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Procedures Ids"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "procedures_ids"
                ],
                "title": "Capabilities",
                "description": "Submodel to describe the capabilities of a resource by describing available \nprocedures in the resource. \n\nArgs:\n    id (str): The id of the capabilities.\n    description (Optional[str]): The description of the capabilities.\n    id_short (Optional[str]): The short id of the capabilities.\n    semantic_id (Optional[str]): The semantic id of the capabilities.\n    procedure_ids (List[str]): The list of ids of procedure that are available for the resource."
            },
            "ChangeDriver": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "distribution_function_over_time_horizon": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TriangularDistribution"
                            },
                            {
                                "$ref": "#/components/schemas/NormalDistribution"
                            },
                            {
                                "$ref": "#/components/schemas/ExponentialDistribution"
                            },
                            {
                                "$ref": "#/components/schemas/LognormalDistribution"
                            },
                            {
                                "$ref": "#/components/schemas/UniformDistribution"
                            }
                        ],
                        "title": "Distribution Function Over Time Horizon"
                    },
                    "occurrence_distribution_per_unit_of_time": {
                        "$ref": "#/components/schemas/BinomialDistribution"
                    },
                    "frequency": {
                        "type": "number",
                        "title": "Frequency"
                    },
                    "change_driver_influences": {
                        "items": {
                            "$ref": "#/components/schemas/ChangeDriverInfluence"
                        },
                        "type": "array",
                        "title": "Change Driver Influences"
                    },
                    "influenced_receptor_key_figure_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Influenced Receptor Key Figure Ids"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "distribution_function_over_time_horizon",
                    "occurrence_distribution_per_unit_of_time",
                    "frequency",
                    "change_driver_influences",
                    "influenced_receptor_key_figure_ids"
                ],
                "title": "ChangeDriver",
                "description": "Base class for all submodels.\n\nArgs:\n    id (str): Global id of the object.\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "ChangeDriverInfluence": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "is_influenced": {
                        "type": "boolean",
                        "title": "Is Influenced"
                    },
                    "influenecing_change_driver": {
                        "type": "string",
                        "title": "Influenecing Change Driver"
                    },
                    "influence_type": {
                        "type": "string",
                        "title": "Influence Type"
                    },
                    "influence_time": {
                        "type": "number",
                        "title": "Influence Time"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "is_influenced",
                    "influenecing_change_driver",
                    "influence_type",
                    "influence_time"
                ],
                "title": "ChangeDriverInfluence",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "ChangeScenario": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "change_drivers": {
                        "items": {
                            "$ref": "#/components/schemas/ChangeDriver"
                        },
                        "type": "array",
                        "title": "Change Drivers"
                    },
                    "receptor_key_figures": {
                        "items": {
                            "$ref": "#/components/schemas/ReceptorKeyFigure"
                        },
                        "type": "array",
                        "title": "Receptor Key Figures"
                    },
                    "base_production_system_id": {
                        "type": "string",
                        "title": "Base Production System Id"
                    },
                    "reconfiguration_constraints": {
                        "$ref": "#/components/schemas/ReconfigurationConstraints"
                    },
                    "reconfiguration_options": {
                        "$ref": "#/components/schemas/ReconfigurationOptions"
                    },
                    "reconfiguration_objectives": {
                        "$ref": "#/components/schemas/ReconfigurationObjectives"
                    },
                    "solution_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Solution Ids"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "ChangeScenario",
                "description": "The ChangeScenario represents a change scenario for the configuration of a production system. It contains the change drivers and the \nreceptor key figures of the change scenario, thus describing how requirements on the production system change over time.\n\nMoreover, the change scenario holds constraints and options for reconfiguration of the production system, objectives of the change \nscenario and a list to found solutions. \n\nArgs:\n    id (str): The id of the change scenario.\n    description (Optional[str]): The description of the change scenario.\n    id_short (Optional[str]): The short id of the change scenario."
            },
            "ConstructionData": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "cad_file": {
                        "type": "string",
                        "title": "Cad File"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "ConstructionData",
                "description": "Submodel to describe the construction data of a product.\n\nArgs:\n    id (str): The id of the construction data.\n    description (Optional[str]): The description of the construction data.\n    id_short (Optional[str]): The short id of the construction data.\n    semantic_id (Optional[str]): The semantic id of the construction data.\n    cad_file (Optional[str]): IRI to a CAD file of the product."
            },
            "ContinuousRKF": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "absolute_influences_change_drivers": {
                        "type": "string",
                        "title": "Absolute Influences Change Drivers"
                    },
                    "relative_influences_change_drivers": {
                        "type": "string",
                        "title": "Relative Influences Change Drivers"
                    },
                    "slope_influences_change_drivers": {
                        "type": "string",
                        "title": "Slope Influences Change Drivers"
                    },
                    "previous_slope": {
                        "type": "number",
                        "title": "Previous Slope"
                    },
                    "previous_value": {
                        "type": "number",
                        "title": "Previous Value"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "absolute_influences_change_drivers",
                    "relative_influences_change_drivers",
                    "slope_influences_change_drivers",
                    "previous_slope",
                    "previous_value"
                ],
                "title": "ContinuousRKF",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "ControlLogic": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "sequencing_policy": {
                        "type": "string",
                        "enum": [
                            "FIFO",
                            "SPT",
                            "LIFO",
                            "EDD",
                            "ODD"
                        ],
                        "title": "Sequencing Policy"
                    },
                    "routing_policy": {
                        "type": "string",
                        "enum": [
                            "random",
                            "nearest",
                            "shortest_queue",
                            "alternating",
                            "round_robin"
                        ],
                        "title": "Routing Policy"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "ControlLogic",
                "description": "Submodel to describe the control logic of a resource, by describing its control policy. It specifies in which sequence the resource processes the products.\n\nArgs:\n    id (str): The id of the control logic.\n    id_short (str): The short id of the control logic.\n    description (Optional[str]): The description of the control logic.\n    semantic_id (Optional[str]): The semantic id of the control logic.\n    sequencing_policy (Literal[\"FIFO\", \"SPT_transport\", \"LIFO\", \"SPT\", \"EDD\", \"ODD\"]): The sequencing policy of the resource, determining in which sequence requests are processed.\n    routing_policy (Literal[\"random\", \"nearest\", \"shortest_queue\", \"alternating, \"round_robin\"]): The routing policy of the resource how redundant sub resources are used."
            },
            "DiscreteRKF": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "value_for_occurence": {
                        "type": "string",
                        "title": "Value For Occurence"
                    },
                    "value_for_non_occurence": {
                        "type": "string",
                        "title": "Value For Non Occurence"
                    },
                    "previous_value": {
                        "type": "string",
                        "title": "Previous Value"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "value_for_occurence",
                    "value_for_non_occurence",
                    "previous_value"
                ],
                "title": "DiscreteRKF",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "DistributionTypeEnum": {
                "type": "string",
                "enum": [
                    "normal",
                    "traingular",
                    "binomial",
                    "exponential",
                    "lognormal",
                    "uniform"
                ],
                "title": "DistributionTypeEnum",
                "description": "An enumeration."
            },
            "EnergyInterface": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "voltage": {
                        "type": "number",
                        "title": "Voltage"
                    },
                    "current": {
                        "type": "number",
                        "title": "Current"
                    },
                    "power": {
                        "type": "number",
                        "title": "Power"
                    },
                    "current_type": {
                        "type": "string",
                        "title": "Current Type"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "voltage",
                    "current",
                    "power",
                    "current_type"
                ],
                "title": "EnergyInterface",
                "description": "Interface for energy handling, e.g. if a product is passed to this resource, the EnergyInterface specifies the requried energy level.\n\nArgs:\n    voltage (float): The voltage of the energy interface.\n    current (float): The current of the energy interface.\n    power (float): The power of the energy interface.\n    current_type (str): The current type of the energy interface."
            },
            "Event": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "time": {
                        "type": "number",
                        "title": "Time"
                    },
                    "resource_id": {
                        "type": "string",
                        "title": "Resource Id"
                    },
                    "procedure_id": {
                        "type": "string",
                        "title": "Procedure Id"
                    },
                    "procedure_type": {
                        "$ref": "#/components/schemas/ProcedureTypeEnum"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ActivityTypeEnum"
                    },
                    "product_id": {
                        "type": "string",
                        "title": "Product Id"
                    },
                    "expected_end_time": {
                        "type": "number",
                        "title": "Expected End Time"
                    },
                    "actual_end_time": {
                        "type": "number",
                        "title": "Actual End Time"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "time",
                    "resource_id",
                    "procedure_id",
                    "procedure_type",
                    "activity"
                ],
                "title": "Event",
                "description": "The Event class represents an event in the execution of a procedure. It contains the time of the event, the resource that executed the event, the procedure that was executed, the activity that was executed, the product that was produced, and whether the event was successful or not.\n\nArgs:\n    time (float): The time of the event.\n    resource_id (str): The id of the resource that executed the event.\n    procedure_id (str): The id of the procedure that was executed.\n    procedure_type (ProcedureTypeEnum): The type of the procedure that was executed.\n    activity (str): The activity that was executed.\n    product_id (Optional[str]): The id of the product that was produced.\n    expected_end_time (Optional[float]): The expected end time of the event.\n    actual_end_time (Optional[float]): The actual end time of the event.\n    success (Optional[bool]): Whether the event was successful or not."
            },
            "EventLog": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "event_log": {
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        },
                        "type": "array",
                        "title": "Event Log"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "event_log"
                ],
                "title": "EventLog",
                "description": "Base class for all submodels.\n\nArgs:\n    id (str): Global id of the object.\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "ExecutionModel": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "schedule": {
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        },
                        "type": "array",
                        "title": "Schedule"
                    },
                    "exeuction_log": {
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        },
                        "type": "array",
                        "title": "Exeuction Log"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "ExecutionModel",
                "description": "The ExecutionModel represents all planned (scheduled) and performed (executed) execution of a process. It contains the schedule of the process, and the execution log of the process.\n\nArgs:\n    id (str): The id of the execution model.\n    description (Optional[str]): The description of the execution model.\n    id_short (Optional[str]): The short id of the execution model.\n    semantic_id (Optional[str]): The semantic id of the execution model.\n    schedule (List[Event]): The schedule of the procedure.\n    exeuction_log (List[Event]): The execution log of the procedure.        "
            },
            "ExponentialDistribution": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "exponential"
                        ],
                        "title": "Type"
                    },
                    "mean": {
                        "type": "number",
                        "title": "Mean"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "type",
                    "mean"
                ],
                "title": "ExponentialDistribution",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "GeneralInformation": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "order_id": {
                        "type": "string",
                        "title": "Order Id"
                    },
                    "priority": {
                        "type": "integer",
                        "title": "Priority"
                    },
                    "customer_information": {
                        "type": "string",
                        "title": "Customer Information"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "order_id",
                    "priority",
                    "customer_information"
                ],
                "title": "GeneralInformation",
                "description": "Submodel to describe the general information of an order.\n\nArgs:\n    id (str): The id of the general information.\n    description (Optional[str]): The description of the general information.\n    id_short (Optional[str]): The short id of the general information.\n    semantic_id (Optional[str]): The semantic id of the general information.\n    order_id (str): The id of the order.\n    priority (int): The priority of the order.\n    customer_information (str): The customer information of the order."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "InformationInterface": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "protocol": {
                        "type": "string",
                        "title": "Protocol"
                    },
                    "adress": {
                        "type": "string",
                        "title": "Adress"
                    },
                    "port": {
                        "type": "integer",
                        "title": "Port"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "protocol",
                    "adress"
                ],
                "title": "InformationInterface",
                "description": "Interface for information exchange with the resource.\n\nArgs:\n    protocol (str): The protocol of the information interface.\n    adress (str): The adress of the information interface (e.g. IP adress)\n    port (Optional[int]): The port of the information interface."
            },
            "KPI": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/KPIEnum"
                    },
                    "target": {
                        "type": "string",
                        "enum": [
                            "min",
                            "max"
                        ],
                        "title": "Target"
                    },
                    "weight": {
                        "type": "number",
                        "title": "Weight",
                        "default": 1
                    },
                    "value": {
                        "type": "number",
                        "title": "Value"
                    },
                    "context": {
                        "items": {
                            "$ref": "#/components/schemas/KPILevelEnum"
                        },
                        "type": "array"
                    },
                    "resource": {
                        "type": "string",
                        "title": "Resource"
                    },
                    "product": {
                        "type": "string",
                        "title": "Product"
                    },
                    "process": {
                        "type": "string",
                        "title": "Process"
                    },
                    "start_time": {
                        "type": "number",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "number",
                        "title": "End Time"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "name",
                    "target"
                ],
                "title": "KPI",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "KPIEnum": {
                "type": "string",
                "enum": [
                    "output",
                    "throughput",
                    "cost",
                    "WIP",
                    "throughput_time",
                    "processing_time",
                    "productive_time",
                    "standby_time",
                    "setup_time",
                    "unscheduled_downtime",
                    "dynamic_WIP",
                    "dynamic_throughput_time"
                ],
                "title": "KPIEnum",
                "description": "An enumeration."
            },
            "KPILevelEnum": {
                "type": "string",
                "enum": [
                    "system",
                    "resource",
                    "all_materials",
                    "material_type",
                    "material",
                    "process"
                ],
                "title": "KPILevelEnum",
                "description": "An enumeration."
            },
            "KeyPerformanceIndicators": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "kpis": {
                        "items": {
                            "$ref": "#/components/schemas/KPI"
                        },
                        "type": "array",
                        "title": "Kpis"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "kpis"
                ],
                "title": "KeyPerformanceIndicators",
                "description": "Base class for all submodels.\n\nArgs:\n    id (str): Global id of the object.\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "LognormalDistribution": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "lognormal"
                        ],
                        "title": "Type"
                    },
                    "mean": {
                        "type": "number",
                        "title": "Mean"
                    },
                    "std": {
                        "type": "number",
                        "title": "Std"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "type",
                    "mean",
                    "std"
                ],
                "title": "LognormalDistribution",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "MaterialDirectionType": {
                "type": "string",
                "enum": [
                    "IN",
                    "OUT",
                    "INOUT"
                ],
                "title": "MaterialDirectionType",
                "description": "Enum to describe the direction of material flow in a material interface."
            },
            "MaterialInterface": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "position": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "maxItems": 3,
                        "minItems": 2,
                        "title": "Position"
                    },
                    "orientation": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "maxItems": 3,
                        "minItems": 2,
                        "title": "Orientation"
                    },
                    "direction": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaterialDirectionType"
                            }
                        ],
                        "default": "INOUT"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "position",
                    "orientation"
                ],
                "title": "MaterialInterface",
                "description": "Interface for material handling, e.g. if a product is passed to this resource, the MaterialInterface specifies the requried position and orientation\nof the product (each in 2D or 3D coordinates).\n\nArgs:\n    position (conlist(float, min_items=2, max_items=3)): The position of the material interface.\n    orientation (conlist(float, min_items=2, max_items=3)): The orientation of the material interface."
            },
            "ModellingEnum": {
                "type": "string",
                "enum": [
                    "discrete",
                    "continuous"
                ],
                "title": "ModellingEnum",
                "description": "An enumeration."
            },
            "NormalDistribution": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "normal"
                        ],
                        "title": "Type"
                    },
                    "mean": {
                        "type": "number",
                        "title": "Mean"
                    },
                    "std": {
                        "type": "number",
                        "title": "Std"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "type",
                    "mean",
                    "std"
                ],
                "title": "NormalDistribution",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "Objective": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/KPIEnum"
                    },
                    "weight": {
                        "type": "number",
                        "title": "Weight"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "type",
                    "weight"
                ],
                "title": "Objective",
                "description": "The Objective represents an objective of the change scenario.\n\nArgs:\n    description (Optional[str]): The description of the objective.\n    id_short (Optional[str]): The short id of the objective.\n    sematic_id (Optional[str]): The semantic id of the objective.\n    type (KPIEnum): The type of the objective.\n    weight (float): The weight of the objective."
            },
            "Order": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "general_information": {
                        "$ref": "#/components/schemas/GeneralInformation"
                    },
                    "order_schedule": {
                        "$ref": "#/components/schemas/OrderSchedule"
                    },
                    "ordered_products": {
                        "$ref": "#/components/schemas/OrderedProducts"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "general_information"
                ],
                "title": "Order",
                "description": "AAS to describe an order.\n\nArgs:\n    id (str): The id of the order.\n    description (Optional[str]): The description of the order.\n    id_short (Optional[str]): The short id of the order.\n    product_instances (ProductInstances): The product instances of the order.\n    general_information (GeneralInformation): The general information of the order.\n    order_schedule (OrderSchedule): The schedule of the order."
            },
            "OrderSchedule": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "earliest_start_time": {
                        "type": "number",
                        "title": "Earliest Start Time"
                    },
                    "latest_start_time": {
                        "type": "number",
                        "title": "Latest Start Time"
                    },
                    "delivery_time": {
                        "type": "number",
                        "title": "Delivery Time"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "earliest_start_time",
                    "latest_start_time",
                    "delivery_time"
                ],
                "title": "OrderSchedule",
                "description": "Submodel to describe the schedule of an order.\n\nArgs:\n    id (str): The id of the order schedule.\n    description (Optional[str]): The description of the order schedule.\n    id_short (Optional[str]): The short id of the order schedule.\n    semantic_id (Optional[str]): The semantic id of the order schedule.\n    earliest_start_time (float): The earliest start time of the order.\n    latest_start_time (float): The latest start time of the order.\n    delivery_time (float): The delivery time of the order."
            },
            "OrderedProduct": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "product_type": {
                        "type": "string",
                        "title": "Product Type"
                    },
                    "target_quantity": {
                        "type": "integer",
                        "title": "Target Quantity"
                    },
                    "product_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Product Ids",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "product_type",
                    "target_quantity"
                ],
                "title": "OrderedProduct",
                "description": "Submodel that describes the product instances of an order with reference to their AAS.\n\nArgs:\n    description (Optional[str]): The description of the product instances.\n    id_short (Optional[str]): The short id of the product instances.\n    semantic_id (Optional[str]): The semantic id of the product instances.\n    product_type (str): Product type of the order.\n    target_quantity (int): Number of requested product instances\n    product_ids (List[str]): Reference to the AAS of the product instances of the order. "
            },
            "OrderedProducts": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "ordered_products": {
                        "items": {
                            "$ref": "#/components/schemas/OrderedProduct"
                        },
                        "type": "array",
                        "title": "Ordered Products"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "ordered_products"
                ],
                "title": "OrderedProducts",
                "description": "Submodel that describes the product instances of an order with reference to their AAS.\n\nArgs:\n    id (str): The id of the product instances.\n    description (Optional[str]): The description of the product instances.\n    id_short (Optional[str]): The short id of the product instances.\n    semantic_id (Optional[str]): The semantic id of the product instances.\n    ordered_products (List[OrderedProduct]): The list of ordered products specifying the ordered type and the quantity of the product type. ."
            },
            "Performance": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "key_performance_indicators": {
                        "$ref": "#/components/schemas/KeyPerformanceIndicators"
                    },
                    "event_log": {
                        "$ref": "#/components/schemas/EventLog"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "key_performance_indicators"
                ],
                "title": "Performance",
                "description": "Base class for all Asset Administration Shells (AAS).\n\nArgs:\n    id (str): Global id of the object.\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None."
            },
            "Procedure": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "procedure_information": {
                        "$ref": "#/components/schemas/ProcedureInformation"
                    },
                    "process_attributes": {
                        "$ref": "#/components/schemas/ProcessAttributes"
                    },
                    "execution_model": {
                        "$ref": "#/components/schemas/ExecutionModel"
                    },
                    "time_model": {
                        "$ref": "#/components/schemas/TimeModel"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "procedure_information",
                    "process_attributes",
                    "time_model"
                ],
                "title": "Procedure",
                "description": "The Procedure class represents a procedure that is executed by a resource. It contains the process \nattributes, the execution model, and the time model of the procedure. \n\nArgs:\n    id (str): The id of the procedure.\n    description (Optional[str]): The description of the procedure.\n    id_short (Optional[str]): The short id of the procedure.\n    process_attributes (processes.ProcessAttributes): Parameters that describe what the procedure does and how it does it.\n    execution (ExecutionModel): The execution model of the procedure containing planned and performed executions of this procedure.\n    time_model (TimeModel): The time model of the procedure containing parameters to represent the timely duration of the procedure."
            },
            "ProcedureInformation": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "procedure_type": {
                        "$ref": "#/components/schemas/ProcedureTypeEnum"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "procedure_type"
                ],
                "title": "ProcedureInformation",
                "description": "Submodel containing general information about the procedure.\n\nArgs:\n    procedure_type (ProcedureTypeEnum): The type of the procedure."
            },
            "ProcedureTypeEnum": {
                "type": "string",
                "enum": [
                    "Production",
                    "Transport",
                    "Loading",
                    "Setup",
                    "Breakdown",
                    "Maintenance",
                    "NonScheduled"
                ],
                "title": "ProcedureTypeEnum",
                "description": "Enum to describe the type of a procedure."
            },
            "Process": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "process_information": {
                        "$ref": "#/components/schemas/ProcessInformation"
                    },
                    "process_model": {
                        "$ref": "#/components/schemas/ProcessModel"
                    },
                    "process_attributes": {
                        "$ref": "#/components/schemas/ProcessAttributes"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "process_information",
                    "process_model",
                    "process_attributes"
                ],
                "title": "Process",
                "description": "Class to describe a process that is required to produce a product. A process can comprise of multiple sub-processes, described by the process model. With the process attributes, it is specified which attributes are relevant for the process to generate the required transformations of a product.\n\nArgs:\n    id (str): The id of the process.\n    description (Optional[str]): The description of the process.\n    id_short (Optional[str]): The short id of the process.\n    general_Info (GeneralInfo): The general information of the process (e.g. type of process, ...)\n    process_model (ProcessModel): The process model of the process (e.g. sequence of sub-processes, ...)\n    process_attributes (ProcessAttributes): The process attributes of the process (e.g. rotation speed, ...)"
            },
            "ProcessAttributes": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "process_attributes": {
                        "items": {
                            "$ref": "#/components/schemas/AttributePredicate"
                        },
                        "type": "array",
                        "title": "Process Attributes"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "process_attributes"
                ],
                "title": "ProcessAttributes",
                "description": "The SubmodelElementCollection “ProcessAttributes” contains 4 SubmodelElements that allow to describe one specific process attribute in a structured, self-describing and interoperable way.\n\nArgs:\n    id (str): The id of the process attributes.\n    description (Optional[str]): The description of the process attributes.\n    id_short (Optional[str]): The short id of the process attributes.\n    semantic_id (Optional[str]): The semantic id of the process attributes.\n    process_attributes (List[AttributePredicate]): The process attributes of the process (e.g. rotation speed, ...)"
            },
            "ProcessInformation": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "general_type": {
                        "type": "string",
                        "enum": [
                            "Manufacturing",
                            "Material Flow",
                            "Remanufacturing",
                            "Assembly"
                        ],
                        "title": "General Type"
                    },
                    "manufacturing_process_type": {
                        "type": "string",
                        "enum": [
                            "Primary Shaping",
                            "Forming",
                            "Cutting",
                            "Joining",
                            "Coating",
                            "Changing Material Properties"
                        ],
                        "title": "Manufacturing Process Type"
                    },
                    "material_flow_process_type": {
                        "type": "string",
                        "enum": [
                            "Storage",
                            "Handling",
                            "Conveying"
                        ],
                        "title": "Material Flow Process Type"
                    },
                    "remanufacturing_process_type": {
                        "type": "string",
                        "enum": [
                            "Disassembly",
                            "Remediation",
                            "Cleaning",
                            "Inspection"
                        ],
                        "title": "Remanufacturing Process Type"
                    },
                    "assembly_process_type": {
                        "type": "string",
                        "enum": [
                            "Joining",
                            "Handling",
                            "Adjusting",
                            "Testing",
                            "Special Operations"
                        ],
                        "title": "Assembly Process Type"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "general_type"
                ],
                "title": "ProcessInformation",
                "description": "The SubmodelElementCollection GeneralInfo contains 4 SubmodelElements that allow to describe one specific process attribute in a structured, self-describing and interoperable way.\nThe types are defined by DIN 8580 for Manufacturing Processes, VDI 2411 for Material Flow Processes, VDI 2243 for Remanufacturing Processes and VDI 2860 for Assembly.\n\nArgs:\n    id (str): The id of the general info.\n    description (Optional[str]): The description of the process.\n    id_short (Optional[str]): The short id of the process.\n    semantic_id (Optional[str]): The semantic id of the process.\n    general_type (Literal[\"Manufacturing\", \"Material Flow\", \"Remanufacturing\", \"Assembly\", \"Other\"]): The general type of process or procedure that is describeded by this attribute.\n    manufacturing_process_type (Optional[Literal[\"Primary Shaping\", \"Forming\", \"Cutting\", \"Joining\", \"Coating\", \"Changing Material Properties\"]]): The type of manufacturing process according to DIN 8580.\n    material_flow_process_type (Optional[Literal[\"Storage\", \"Handling\", \"Conveying\"]]): The type of material flow process according to VDI 2411.\n    remanufacturing_process_type (Optional[Literal[\"Disassembly\", \"Remediation\", \"Cleaning\", \"Inspection\"]]): The type of remanufacturing process according to VDI 2243.\n    assembly_process_type (Optional[Literal[\"Joining\", \"Handling\", \"Adjusting\", \"Testing\", \"Special Operations\"]]): The type of assembly process according to VDI 2860."
            },
            "ProcessModel": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type_": {
                        "$ref": "#/components/schemas/ProcessModelType"
                    },
                    "sequence": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Sequence"
                    },
                    "nodes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Nodes"
                    },
                    "edges": {
                        "items": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "maxItems": 2,
                            "minItems": 2
                        },
                        "type": "array",
                        "title": "Edges"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "type_"
                ],
                "title": "ProcessModel",
                "description": "The SubmodelElementCollection “ProcessModel” contains 4 SubmodelElements that allow to describe one specific process attribute in a structured, self-describing and interoperable way.\n\nArgs:\n    id (str): The id of the process model.\n    description (Optional[str]): The description of the process model.\n    id_short (Optional[str]): The short id of the process model.\n    semantic_id (Optional[str]): The semantic id of the process model.\n    type_ (ProcessModelType): The type of the process model.\n    sequence (Optional[List[str]]): The sequence of the process model (for Sequential process model type) with ids of the subprocesses.\n    nodes (Optional[List[str]]): The nodes of the process model (for Graph process model type) with ids of the subprocesses.\n    edges (Optional[List[Tuple[str, str]]]): The edges of the process model (for Graph process model type) with ids of the subprocesses."
            },
            "ProcessModelType": {
                "type": "string",
                "enum": [
                    "Single",
                    "Sequential",
                    "Graph"
                ],
                "title": "ProcessModelType",
                "description": "Enum to describe the type of process model."
            },
            "ProcessReference": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "process_id": {
                        "type": "string",
                        "title": "Process Id"
                    },
                    "alternative_processes_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Alternative Processes Ids"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "process_id"
                ],
                "title": "ProcessReference",
                "description": "Submodel to reference process to create a product.\n\nArgs:\n    id (str): The id of the process reference.\n    description (Optional[str]): The description of the process reference.\n    id_short (Optional[str]): The short id of the process reference.\n    semantic_id (Optional[str]): The semantic id of the process reference.\n    process_id (str): reference to the process to create the product\n    alternative_process_ids (Optional[List[str]]): alternative processes to create the product"
            },
            "Product": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "product_information": {
                        "$ref": "#/components/schemas/ProductInformation"
                    },
                    "construction_data": {
                        "$ref": "#/components/schemas/ConstructionData"
                    },
                    "bom": {
                        "$ref": "#/components/schemas/BOM"
                    },
                    "process_reference": {
                        "$ref": "#/components/schemas/ProcessReference"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "Product",
                "description": "AAS to describe a product.\n\nArgs:\n    id (str): The id of the product.\n    description (Optional[str]): The description of the product.\n    id_short (Optional[str]): The short id of the product.\n    semantic_id (Optional[str]): The semantic id of the product.\n    construction_data (Optional[ConstructionData]): The construction data of the product.\n    bom (Optional[BOM]): The bill of materials of the product.\n    process_reference (Optional[ProcessReference]): The process reference of the product."
            },
            "ProductInformation": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "product_type": {
                        "type": "string",
                        "title": "Product Type"
                    },
                    "manufacturer": {
                        "type": "string",
                        "title": "Manufacturer"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "product_type",
                    "manufacturer"
                ],
                "title": "ProductInformation",
                "description": "Submodel to describe general information of the product.\n\nArgs:\n    id (str): The id of the product general information.\n    description (Optional[str]): The description of the product general information.\n    id_short (Optional[str]): The short id of the product general information.\n    semantic_id (Optional[str]): The semantic id of the product general information.\n    product_type (str): The type of the product.\n    manufacturer (str): The manufacturer of the product."
            },
            "ReceptorEnum": {
                "type": "string",
                "enum": [
                    "quantity",
                    "cost",
                    "time",
                    "product",
                    "technology",
                    "quality"
                ],
                "title": "ReceptorEnum",
                "description": "An enumeration."
            },
            "ReceptorKeyFigure": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "receptor_type": {
                        "$ref": "#/components/schemas/ReceptorEnum"
                    },
                    "modelling_type": {
                        "$ref": "#/components/schemas/ModellingEnum"
                    },
                    "unit": {
                        "type": "string",
                        "title": "Unit"
                    },
                    "value": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DiscreteRKF"
                            },
                            {
                                "$ref": "#/components/schemas/ContinuousRKF"
                            }
                        ],
                        "title": "Value"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "receptor_type",
                    "modelling_type",
                    "unit",
                    "value"
                ],
                "title": "ReceptorKeyFigure",
                "description": "Base class for all submodels.\n\nArgs:\n    id (str): Global id of the object.\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "ReconfigurationConstraints": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "max_reconfiguration_cost": {
                        "type": "number",
                        "title": "Max Reconfiguration Cost"
                    },
                    "max_reconfiguration_time": {
                        "type": "number",
                        "title": "Max Reconfiguration Time"
                    },
                    "max_number_of_machines": {
                        "type": "integer",
                        "title": "Max Number Of Machines"
                    },
                    "max_number_of_transport_resources": {
                        "type": "integer",
                        "title": "Max Number Of Transport Resources"
                    },
                    "max_number_of_process_modules_per_resource": {
                        "type": "integer",
                        "title": "Max Number Of Process Modules Per Resource"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "max_reconfiguration_cost",
                    "max_reconfiguration_time",
                    "max_number_of_machines",
                    "max_number_of_transport_resources",
                    "max_number_of_process_modules_per_resource"
                ],
                "title": "ReconfigurationConstraints",
                "description": "The ReconfigurationConstraints represents the constraints for the reconfiguration of the production system.\n\nArgs:\n    max_reconfiguration_cost (float): The maximum cost of reconfiguration of the production system.\n    max_reconfiguration_time (float): The maximum time of reconfiguration of the production system.\n    max_number_of_machines (int): The maximum number of machines of the production system.\n    max_number_of_transport_resources (int): The maximum number of transport resources of the production system.\n    max_number_of_process_model_per_resource (int): The maximum number of process models per resource of the production system."
            },
            "ReconfigurationEnum": {
                "type": "string",
                "enum": [
                    "full",
                    "production_capacity",
                    "transport_capacity",
                    "layout",
                    "sequencing_logic",
                    "routing_logic"
                ],
                "title": "ReconfigurationEnum",
                "description": "# from prodsys\nEnum that represents the different levels of reconfigurations that are possible.\n\n- ProductionCapacity: Reconfiguration of production capacity (number of machines and their configuration)\n- TransportCapacity: Reconfiguration of transport capacity (number of transport resources and their configuration)\n- Layout: Reconfiguration of layout (only position of resources)\n- SequencingLogic: Reconfiguration of sequencing logic (only the control policy of resources)\n- RoutingLogic: Reconfiguration of routing logic (only the routing heuristic of routers)"
            },
            "ReconfigurationObjectives": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "objectives": {
                        "items": {
                            "$ref": "#/components/schemas/Objective"
                        },
                        "type": "array",
                        "title": "Objectives"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "objectives"
                ],
                "title": "ReconfigurationObjectives",
                "description": "The ReconfigurationObjectives represents the objectives of the change scenario.\n\nArgs:\n    id (str): The id of the reconfiguration objectives.\n    description (Optional[str]): The description of the reconfiguration objectives.\n    id_short (Optional[str]): The short id of the reconfiguration objectives.\n    sematic_id (Optional[str]): The semantic id of the reconfiguration objectives.\n    objectives (List[Objective]): The objectives of the change scenario."
            },
            "ReconfigurationOptions": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "reconfiguration_type": {
                        "$ref": "#/components/schemas/ReconfigurationEnum"
                    },
                    "machine_controllers": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "FIFO",
                                "LIFO",
                                "SPT"
                            ]
                        },
                        "type": "array",
                        "title": "Machine Controllers"
                    },
                    "transport_controllers": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "FIFO",
                                "SPT_transport"
                            ]
                        },
                        "type": "array",
                        "title": "Transport Controllers"
                    },
                    "routing_heuristics": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "shortest_queue",
                                "random"
                            ]
                        },
                        "type": "array",
                        "title": "Routing Heuristics"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "reconfiguration_type",
                    "machine_controllers",
                    "transport_controllers",
                    "routing_heuristics"
                ],
                "title": "ReconfigurationOptions",
                "description": "The ReconfigurationOptions represents the options for the reconfiguration of the production system.\n\nArgs:\n    id (str): The id of the reconfiguration option.\n    description (Optional[str]): The description of the reconfiguration option.\n    id_short (Optional[str]): The short id of the reconfiguration option.\n    sematic_id (Optional[str]): The semantic id of the reconfiguration option.\n    reconfiguration_type (ReconfigurationEnum): The type of reconfiguration that is possible.\n    machine_controllers (List[Literal[\"FIFO\", \"LIFO\", \"SPT\"]]): The machine controllers that are possible.\n    transport_controllers (List[Literal[\"FIFO\", \"SPT_transport\"]]): The transport controllers that are possible.\n    routing_heuristics (List[Literal[\"shortest_queue\", \"random\"]]): The routing heuristics that are possible."
            },
            "Resource": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "resource_information": {
                        "$ref": "#/components/schemas/ResourceInformation"
                    },
                    "capabilities": {
                        "$ref": "#/components/schemas/Capabilities"
                    },
                    "construction_data": {
                        "$ref": "#/components/schemas/ConstructionData"
                    },
                    "resource_configuration": {
                        "$ref": "#/components/schemas/ResourceConfiguration"
                    },
                    "control_logic": {
                        "$ref": "#/components/schemas/ControlLogic"
                    },
                    "resource_interface": {
                        "$ref": "#/components/schemas/ResourceInterfaces"
                    },
                    "resource_performances": {
                        "$ref": "#/components/schemas/ResourcePerformances"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "Resource",
                "description": "AAS to describe a resource.\n\nArgs:\n    id (str): The id of the resource.\n    description (Optional[str]): The description of the resource.\n    id_short (Optional[str]): The short id of the resource.\n    general_information (Optional[GeneralInformation]): some general information describing the resource.\n    capabilities (Optional[Capabilities]): The capabilities of the resource, containing information about available procedures.\n    construction_data (Optional[ConstructionData]): The construction data of the resource.\n    resource_configuration (Optional[ResourceHierarchy]): The configruation of the resource, containting information about sub resources.\n    control_logic (Optional[ControlLogic]): The control logic of the resource.\n    resource_interface (Optional[ResourceInterfaces]): the interfaces of the resource."
            },
            "ResourceConfiguration": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "sub_resources": {
                        "items": {
                            "$ref": "#/components/schemas/SubResource"
                        },
                        "type": "array",
                        "title": "Sub Resources"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "ResourceConfiguration",
                "description": "Submodel to describe the configuration of a resource, by describing its sub resources and their position and orientation.\n\nArgs:\n    id (str): The id of the resource hierarchy.\n    description (Optional[str]): The description of the resource hierarchy.\n    id_short (Optional[str]): The short id of the resource hierarchy.\n    semantic_id (Optional[str]): The semantic id of the resource hierarchy.\n    sub_resources (Optional[List[SubResource]]): IDs ob sub resources"
            },
            "ResourceInformation": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "manufacturer": {
                        "type": "string",
                        "title": "Manufacturer"
                    },
                    "production_level": {
                        "type": "string",
                        "enum": [
                            "Module",
                            "Station",
                            "System",
                            "Plant",
                            "Network"
                        ],
                        "title": "Production Level"
                    },
                    "resource_type": {
                        "type": "string",
                        "enum": [
                            "Manufacturing",
                            "Material Flow",
                            "Storage",
                            "Barrier",
                            "Empty Spot",
                            "Source",
                            "Sink"
                        ],
                        "title": "Resource Type"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "production_level",
                    "resource_type"
                ],
                "title": "ResourceInformation",
                "description": "Submodel to describe the general information of a resource.\n\nArgs:\n    id (str): The id of the general information.\n    description (Optional[str]): The description of the general information.\n    id_short (Optional[str]): The short id of the general information.\n    semantic_id (Optional[str]): The semantic id of the general information.\n    manufacturer (Optional[str]): The manufacturer of the resource.\n    production_level (Literal[\"Module\", \"Station\", \"System\", \"Plant\", \"Network\"]): The production level of the resource.\n    resource_type (Literal[\"Manufacturing\", \"Material Flow\", \"Storage\"]): The type of the resource."
            },
            "ResourceInterfaces": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "information_interface": {
                        "items": {
                            "$ref": "#/components/schemas/InformationInterface"
                        },
                        "type": "array",
                        "title": "Information Interface"
                    },
                    "material_interfaces": {
                        "items": {
                            "$ref": "#/components/schemas/MaterialInterface"
                        },
                        "type": "array",
                        "title": "Material Interfaces"
                    },
                    "energy_interfaces": {
                        "items": {
                            "$ref": "#/components/schemas/EnergyInterface"
                        },
                        "type": "array",
                        "title": "Energy Interfaces"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "ResourceInterfaces",
                "description": "Submodel to describe the interfaces of a resource to connect to the resource either by energy, information or material.\n\nArgs:\n    id (str): The id of the resource interfaces.\n    description (Optional[str]): The description of the resource interfaces.\n    id_short (Optional[str]): The short id of the resource interfaces.\n    semantic_id (Optional[str]): The semantic id of the resource interfaces.\n    information_interface (Optional[List[CommunicationInterface]]): The communication interfaces of the resource.\n    material_interfaces (Optional[List[MaterialInterface]]): The material interfaces of the resource.\n    energy_interfaces (Optional[List[EnergyInterface]]): The energy interfaces of the resource."
            },
            "ResourcePerformance": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "performance_id": {
                        "type": "string",
                        "title": "Performance Id"
                    },
                    "associated_configuration_id": {
                        "type": "string",
                        "title": "Associated Configuration Id"
                    },
                    "obtained_performance_from": {
                        "type": "string",
                        "title": "Obtained Performance From"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "obtained_performance_from"
                ],
                "title": "ResourcePerformance",
                "description": "Submodel to make a reference to the Peroformance of a resource.\n\nArgs:\n    description (Optional[str]): The description of the resource performance.\n    id_short (Optional[str]): The short id of the resource performance.\n    semantic_id (Optional[str]): The semantic id of the resource performance.\n    performance_id (Optional[str]): The id of the performance AAS of the resource.\n    associated_configuration_id (Optional[str]): The id of the configuration AAS of the resource.\n    obtained_performance_from (str): The tool / software used to obtain the results."
            },
            "ResourcePerformances": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "performances": {
                        "items": {
                            "$ref": "#/components/schemas/ResourcePerformance"
                        },
                        "type": "array",
                        "title": "Performances"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id"
                ],
                "title": "ResourcePerformances",
                "description": "Submodel to describe the performance of a resource.\n\nArgs:\n    id (str): The id of the resource performance.\n    description (Optional[str]): The description of the resource performance.\n    id_short (Optional[str]): The short id of the resource performance.\n    semantic_id (Optional[str]): The semantic id of the resource performance.\n    performances (Optional[List[ResourcePerformance]]): The performances of the resource."
            },
            "SubProduct": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "product_type": {
                        "type": "string",
                        "title": "Product Type"
                    },
                    "product_id": {
                        "type": "string",
                        "title": "Product Id"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "assembled",
                            "unassembled"
                        ],
                        "title": "Status"
                    },
                    "quantity": {
                        "type": "integer",
                        "title": "Quantity"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "product_type",
                    "product_id",
                    "status",
                    "quantity"
                ],
                "title": "SubProduct",
                "description": "SubmodelElementCollection to describe a subproduct of a product with reference to its AAS, status informatino and quantity.\n\nArgs:\n    description (Optional[str]): The description of the subproduct.\n    id_short (Optional[str]): The short id of the subproduct.\n    semantic_id (Optional[str]): The semantic id of the subproduct.\n    product_type (str): The type of the subproduct.\n    product_id (str): The AAS reference of the subproduct.\n    status (Literal[\"assembled\", \"unassembled\"]): The status of the subproduct.\n    quantity (int): The quantity of the subproduct(s)."
            },
            "SubResource": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "resource_id": {
                        "type": "string",
                        "title": "Resource Id"
                    },
                    "position": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "maxItems": 3,
                        "minItems": 2,
                        "title": "Position"
                    },
                    "orientation": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "maxItems": 3,
                        "minItems": 1,
                        "title": "Orientation"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "resource_id",
                    "position",
                    "orientation"
                ],
                "title": "SubResource",
                "description": "SubmodelElementCollection to describe a subresource of a resource with reference to its AAS, position and orientation (2D or 3D).\n\nArgs:\n    description (Optional[str]): The description of the subresource.\n    id_short (Optional[str]): The short id of the subresource.\n    semantic_id (Optional[str]): The semantic id of the subresource.\n    resource_id (str): The id of the subresource.\n    position (conlist(float, min_items=2, max_items=3)): The position of the subresource (x, y, z).\n    orientation (conlist(float, min_items=1, max_items=3)): The orientation of the subresource (alpha, beta, gamma)."
            },
            "TimeModel": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type_": {
                        "type": "string",
                        "enum": [
                            "sequential",
                            "distribution",
                            "distance_based"
                        ],
                        "title": "Type "
                    },
                    "sequence": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "title": "Sequence"
                    },
                    "repeat": {
                        "type": "boolean",
                        "title": "Repeat"
                    },
                    "distribution_type": {
                        "$ref": "#/components/schemas/DistributionTypeEnum"
                    },
                    "distribution_parameters": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TriangularDistribution"
                            },
                            {
                                "$ref": "#/components/schemas/NormalDistribution"
                            },
                            {
                                "$ref": "#/components/schemas/ExponentialDistribution"
                            },
                            {
                                "$ref": "#/components/schemas/LognormalDistribution"
                            },
                            {
                                "$ref": "#/components/schemas/UniformDistribution"
                            }
                        ],
                        "title": "Distribution Parameters"
                    },
                    "speed": {
                        "type": "number",
                        "title": "Speed"
                    },
                    "reaction_time": {
                        "type": "number",
                        "title": "Reaction Time"
                    },
                    "acceleration": {
                        "type": "number",
                        "title": "Acceleration"
                    },
                    "deceleration": {
                        "type": "number",
                        "title": "Deceleration"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "id",
                    "type_"
                ],
                "title": "TimeModel",
                "description": "Submodel containing parameters to represent the timely duration of a procedure.\n\nArgs:\n    id (str): The id of the time model.\n    description (Optional[str]): The description of the time model.\n    id_short (Optional[str]): The short id of the time model.\n    semantic_id (Optional[str]): The semantic id of the time model.\n    type_ (Literal[\"sequential\", \"distribution\", \"distance_based\"]): The type of the time model.\n    sequence (Optional[List[float]]): The sequence of timely values (only for sequential time models).\n    repeat (Optional[bool]): Whether the sequence is repeated or not (only for sequential time models).\n    distribution_type (Optional[str]): The name of the distribution (e.g. \"normal\", \"exponential\", \"weibull\", \"lognormal\", \"gamma\", \"beta\", \"uniform\", \"triangular\", \"discrete\") (only for distribution time models).\n    distribution_parameters (Optional[List[float]]): The parameters of the distribution (1: location, 2: scale, 3 and 4: shape) (only for distribution time models).\n    speed (Optional[float]): The speed of the resource (only for distance-based time models).\n    reaction_time (Optional[float]): The reaction time of the resource (only for distance-based time models).\n    acceleration (Optional[float]): The acceleration of the resource (only for distance-based time models).\n    deceleration (Optional[float]): The deceleration of the resource (only for distance-based time models)."
            },
            "TriangularDistribution": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "traingular"
                        ],
                        "title": "Type"
                    },
                    "lowerBound": {
                        "type": "number",
                        "title": "Lowerbound"
                    },
                    "upperBound": {
                        "type": "number",
                        "title": "Upperbound"
                    },
                    "mode": {
                        "type": "number",
                        "title": "Mode"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "type",
                    "lowerBound",
                    "upperBound",
                    "mode"
                ],
                "title": "TriangularDistribution",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "UniformDistribution": {
                "properties": {
                    "id_short": {
                        "type": "string",
                        "title": "Id Short"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "uniform"
                        ],
                        "title": "Type"
                    },
                    "mean": {
                        "type": "number",
                        "title": "Mean"
                    }
                },
                "type": "object",
                "required": [
                    "id_short",
                    "type",
                    "mean"
                ],
                "title": "UniformDistribution",
                "description": "Base class for all submodel element collections.\n\nArgs:\n    id_short (str): Local id of the object.\n    description (str, optional): Description of the object. Defaults to None.\n    semantic_id (str, optional): Semantic id of the object. Defaults to None."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}