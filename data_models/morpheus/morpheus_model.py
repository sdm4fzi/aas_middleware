# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2024-05-30T17:40:36+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Dict, List, Optional

from pydantic import BaseModel, Field


class WorkProcess(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    info: Optional[str] = None


class Unit(Enum):
    SECOND = 'SECOND'
    PERCENTAGE = 'PERCENTAGE'


class ThresholdType(Enum):
    SMALLER_IS_BETTER = 'SMALLER_IS_BETTER'
    BIGGER_IS_BETTER = 'BIGGER_IS_BETTER'


class ValueStreamKpiDefinition(BaseModel):
    id: Optional[str] = None
    targetValue: Optional[float] = None
    valueStreamKpiName: Optional[str] = None
    valueStreamKpiConfigId: Optional[str] = None
    unit: Optional[Unit] = None
    thresholdType: Optional[ThresholdType] = None
    thresholdGreen: Optional[float] = None
    thresholdYellow: Optional[float] = None
    active: Optional[bool] = None


class LayoutType(Enum):
    U_SHAPE = 'U_SHAPE'
    S_SHAPE = 'S_SHAPE'


class ValueStreamKpiConfig(BaseModel):
    id: Optional[str] = None
    configName: Optional[str] = None
    valueStreamKpiDefinitionIds: Optional[List[str]] = None
    taktTime: Optional[float] = None
    active: Optional[bool] = None
    layoutType: Optional[LayoutType] = None


class ValueStreamKpiAdminSettings(BaseModel):
    id: Optional[str] = None
    operatorView: Optional[bool] = None


class Training(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    startTime: Optional[datetime] = None
    endTime: Optional[datetime] = None
    gameRoundIds: Optional[List[str]] = None
    poleHousingIds: Optional[List[str]] = None


class ProductionLine(BaseModel):
    id: Optional[str] = None
    workStationIds: Optional[List[str]] = None
    workStationIdOrderPenetrationPoint: Optional[str] = None
    workStationIdPoleHousingEntryPoint: Optional[str] = None
    name: Optional[str] = None


class ProcessData(BaseModel):
    id: Optional[str] = None
    entryTime: Optional[datetime] = None
    outputTime: Optional[datetime] = None
    workStationId: Optional[str] = None
    workProcessId: Optional[str] = None
    engineStatus: Optional[bool] = None
    atEntryPoint: Optional[bool] = None
    poleHousingId: Optional[str] = None
    gameRoundId: Optional[str] = None


class PriorityLevel(BaseModel):
    id: Optional[str] = None
    priorityLevelNumber: Optional[int] = None
    timeToDeliverInSec: Optional[float] = None
    deliveryType: Optional[str] = None


class PoleHousingType(Enum):
    SHORT = 'SHORT'
    LONG = 'LONG'


class PoleHousing(BaseModel):
    id: Optional[str] = None
    poleHousingType: Optional[PoleHousingType] = None
    trainingId: Optional[str] = None
    gameRoundId: Optional[str] = None
    variantId: Optional[str] = None
    activeWorkStationId: Optional[str] = None
    activeWorkProcessId: Optional[str] = None
    poleHousingOkay: Optional[bool] = None
    processDataArray: Optional[List[ProcessData]] = None
    defectMessage: Optional[str] = None


class KeyPerformanceIndicator(BaseModel):
    id: Optional[str] = None
    affiliationId: Optional[str] = None
    startTimeGameRound: Optional[datetime] = None
    endTimeGameRound: Optional[datetime] = None
    endTimeTraining: Optional[datetime] = None
    startTimeCalculation: Optional[datetime] = None
    numberOkParts: Optional[int] = None
    numberNotOkParts: Optional[int] = None
    oee: Optional[float] = None
    quality: Optional[float] = None
    availability: Optional[float] = None
    power: Optional[float] = None
    averageCycleTime: Optional[float] = None


class DeviceType(Enum):
    STATUS_LIGHT = 'STATUS_LIGHT'
    RFID = 'RFID'
    PICK_BY_LIGHT = 'PICK_BY_LIGHT'
    SENSOR = 'SENSOR'
    ACTUATOR = 'ACTUATOR'


class IoLinkDeviceVariant(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    deviceId: Optional[int] = None
    deviceType: Optional[DeviceType] = None
    canRead: Optional[bool] = None
    canWrite: Optional[bool] = None


class GameRound(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    startTime: Optional[datetime] = None
    endTime: Optional[datetime] = None
    poleHousingIds: Optional[List[str]] = None
    productionLineId: Optional[str] = None
    enableExpressOrder: Optional[bool] = None


class AutomationDegree(Enum):
    MANUAL = 'MANUAL'
    PARTLY_AUTOMATED = 'PARTLY_AUTOMATED'
    AUTOMATED = 'AUTOMATED'


class WorkStationStatus(Enum):
    OK = 'OK'
    WARNING = 'WARNING'
    ERROR = 'ERROR'


class WorkStation(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    manual: Optional[str] = None
    automationDegree: Optional[AutomationDegree] = None
    imageUrl: Optional[str] = None
    bufferType: Optional[str] = None
    bufferSize: Optional[int] = None
    workProcessIds: Optional[List[str]] = None
    powerConsumption: Optional[float] = None
    carbonFootprint: Optional[float] = None
    editableManualId: Optional[str] = None
    ioLinkMasterId: Optional[str] = None
    currentWorkProcessId: Optional[str] = None
    currentPoleHousingId: Optional[str] = None
    poleHousingInStation: Optional[bool] = None
    workStationConnected: Optional[bool] = None
    workStationStatus: Optional[WorkStationStatus] = None


class Event(Enum):
    POLE_HOUSING_ENTERED_PRODUCTION = 'POLE_HOUSING_ENTERED_PRODUCTION'
    POLE_HOUSING_MATCHED_TO_ORDER = 'POLE_HOUSING_MATCHED_TO_ORDER'
    POLE_HOUSING_FINISHED_PRODUCTION = 'POLE_HOUSING_FINISHED_PRODUCTION'
    FINISHED_PRODUCTION_PROCESS = 'FINISHED_PRODUCTION_PROCESS'
    START_GAME_ROUND = 'START_GAME_ROUND'
    START_TRAINING = 'START_TRAINING'


class Webhook(BaseModel):
    id: Optional[str] = None
    endpoint: Optional[str] = None
    events: Optional[List[Event]] = None


class Variant(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    billOfMaterials: Optional[Dict[str, int]] = None
    workProcessSequenceIds: Optional[List[str]] = None
    currentWorkProcessId: Optional[str] = None
    editable: Optional[bool] = None
    copy_: Optional[bool] = Field(None, alias='copy')
    poleHousingLength: Optional[str] = None


class ShelfKardex(BaseModel):
    id: Optional[str] = None
    shelfSystemId: Optional[str] = None
    partId: Optional[str] = None
    shelfId: Optional[str] = None
    shelfLevel: Optional[int] = None
    startPx: Optional[int] = None
    endPx: Optional[int] = None


class ShelfBalluff(BaseModel):
    id: Optional[str] = None
    shelfSystemId: Optional[str] = None
    partId: Optional[str] = None
    portId: Optional[int] = None


class ShelfSystemKardex(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    active: Optional[bool] = None
    ipAdress: Optional[str] = None
    port: Optional[str] = None
    relativeUrl: Optional[str] = None
    megamatId: Optional[str] = None


class ShelfSystemStatus(Enum):
    OK = 'OK'
    WARNING = 'WARNING'
    ERROR = 'ERROR'


class CurrentColor(Enum):
    off = 'off'
    white = 'white'
    green = 'green'
    red = 'red'
    blue = 'blue'
    yellow = 'yellow'
    orange = 'orange'
    wbk = 'wbk'


class ShelfSystemBalluff(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    active: Optional[bool] = None
    ioLinkMasterId: Optional[str] = None
    shelfSystemStatus: Optional[ShelfSystemStatus] = None
    currentColor: Optional[CurrentColor] = None


class PickingMode(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None


class Part(BaseModel):
    id: Optional[str] = None
    partTypeId: Optional[str] = None
    name: Optional[str] = None
    number: Optional[str] = None
    activeShelfId: Optional[str] = None
    photo: Optional[str] = None


class PartType(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    pickingModeId: Optional[str] = None


class OrderState(Enum):
    ORDERED = 'ORDERED'
    IN_PROGRESS = 'IN_PROGRESS'
    DELIVERED = 'DELIVERED'
    ARCHIVED = 'ARCHIVED'


class PartToPick(BaseModel):
    partId: Optional[str] = None
    shelfId: Optional[str] = None
    amount: Optional[int] = None


class OrderConfirmation(BaseModel):
    orderId: Optional[str] = None
    faultyParts: Optional[int] = None


class VariantSet(BaseModel):
    variants: Optional[List[str]] = None
    parts: Optional[Dict[str, int]] = None
    description: Optional[str] = None
    warning: Optional[str] = None
    photos: Optional[List[str]] = None


class IoLinkMaster(BaseModel):
    id: Optional[str] = None
    connectedIolinkDevices: Optional[Dict[str, str]] = None


class ErrorMessage(BaseModel):
    id: Optional[str] = None
    error: Optional[str] = None
    workstation: Optional[str] = None
    workstationIp: Optional[str] = None
    time: Optional[str] = None
    gameround: Optional[str] = None


class EditablePartType(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    partTypeId: Optional[str] = None
    pickingModeId: Optional[str] = None
    trainingId: Optional[str] = None


class EditableVariant(BaseModel):
    id: Optional[str] = None
    variantId: Optional[str] = None
    name: Optional[str] = None
    billOfMaterials: Optional[Dict[str, int]] = None
    workProcessSequenceIds: Optional[List[str]] = None
    editable: Optional[bool] = None
    activeTrainingId: Optional[str] = None
    displayed: Optional[bool] = None
    poleHousingLength: Optional[str] = None


class TrainingAnalyticsDataEvent(BaseModel):
    timeEnter: Optional[datetime] = None
    timeLeave: Optional[datetime] = None
    polId: Optional[str] = None
    orderId: Optional[str] = None


class TrainingAnalyticsDataOrder(BaseModel):
    startTime: Optional[datetime] = None
    finishTime: Optional[datetime] = None
    variant: Optional[str] = None
    polId: Optional[List[str]] = None
    amount: Optional[int] = None


class IoLinkidentification(BaseModel):
    vendorId: Optional[int] = None
    deviceId: Optional[int] = None
    portNumber: Optional[int] = None
    vendorName: Optional[str] = None
    vendorText: Optional[str] = None
    productName: Optional[str] = None
    productId: Optional[str] = None
    productText: Optional[str] = None
    hardwareRevision: Optional[str] = None
    firmwareRevision: Optional[str] = None
    applicationSpecificTag: Optional[str] = None
    ioLinkRevision: Optional[str] = None


class EditablePart(BaseModel):
    id: Optional[str] = None
    partId: Optional[str] = None
    partTypeId: Optional[str] = None
    name: Optional[str] = None
    number: Optional[str] = None
    activeShelfId: Optional[str] = None
    photo: Optional[str] = None
    activeTrainingId: Optional[str] = None


class Order(BaseModel):
    id: Optional[str] = None
    variantId: Optional[str] = None
    amount: Optional[int] = None
    poleHousingLengthOfVariant: Optional[str] = None
    priorityLevel: Optional[int] = None
    acticeTrainingId: Optional[str] = None
    activeGameRoundId: Optional[str] = None
    partsToPick: Optional[List[PartToPick]] = None
    poleHousingIds: Optional[List[str]] = None
    finishedPoleHousingIds: Optional[List[str]] = None
    orderState: Optional[OrderState] = None
    onPicking: Optional[bool] = None
    onMatching: Optional[bool] = None
    atEntryPoint: Optional[bool] = None
    passedEntryPoint: Optional[bool] = None
    orderIsFinished: Optional[bool] = None
    deleted: Optional[bool] = None
    timeStamp: Optional[datetime] = None
    deliveryTime: Optional[datetime] = None
    completionTime: Optional[datetime] = None
    goodParts: Optional[int] = None
    faultyParts: Optional[int] = None


class Instruction(BaseModel):
    video_id: Optional[str] = None
    variant_sets: Optional[List[VariantSet]] = None


class Manual(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    instructions: Optional[Dict[str, Instruction]] = None


class EditableManual(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    instructions: Optional[Dict[str, Instruction]] = None
    trainingId: Optional[str] = None


class TrainingAnalyticsData(BaseModel):
    orders: Optional[List[TrainingAnalyticsDataOrder]] = None
    events: Optional[List[TrainingAnalyticsDataEvent]] = None


class IoLinkDevice(BaseModel):
    id: Optional[str] = None
    ioLinkDeviceVariantId: Optional[str] = None
    ioLinkIdentification: Optional[IoLinkidentification] = None
