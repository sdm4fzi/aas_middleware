# generated by datamodel-codegen:
#   filename:  time_series_submodel_template_schema.json
#   timestamp: 2024-09-26T16:31:30+00:00

from __future__ import annotations

from pydantic import BaseModel, Field


class PCFGoodsAddressHandover(BaseModel):
    id_short: str = Field(..., examples=['PCFGoodsAddressHandover'], title='Id Short')
    description: str = Field(
        ...,
        examples=['Indicates the place of hand-over of the goods'],
        title='Description',
    )
    semantic_id: str = Field(
        ..., examples=['0173-1#02-ABI497#001'], title='Semantic Id'
    )
    Street: str = Field(..., examples=[], title='Street')
    HouseNumber: str = Field(..., examples=[], title='Housenumber')
    ZipCode: str = Field(..., examples=[], title='Zipcode')
    CityTown: str = Field(..., examples=[], title='Citytown')
    Country: str = Field(..., examples=[], title='Country')


class ProductCarbonFootprint(BaseModel):
    id_short: str = Field(..., examples=['ProductCarbonFootprint'], title='Id Short')
    description: str = Field(
        ...,
        examples=[
            'Balance of greenhouse gas emissions along the entire life cycle of a product in a defined application and in relation to a defined unit of use'
        ],
        title='Description',
    )
    semantic_id: str = Field(
        ...,
        examples=[
            'https://admin-shell.io/idta/CarbonFootprint/ProductCarbonFootprint/0/9'
        ],
        title='Semantic Id',
    )
    PCFCalculationMethod: str = Field(..., examples=[], title='Pcfcalculationmethod')
    PCFCO2eq: float = Field(..., examples=[], title='Pcfco2Eq')
    PCFReferenceValueForCalculation: str = Field(
        ..., examples=[], title='Pcfreferencevalueforcalculation'
    )
    PCFQuantityOfMeasureForCalculation: float = Field(
        ..., examples=[], title='Pcfquantityofmeasureforcalculation'
    )
    PCFLifeCyclePhase: str = Field(..., examples=[], title='Pcflifecyclephase')
    ExplanatoryStatement: None = Field(..., examples=[], title='Explanatorystatement')
    PCFGoodsAddressHandover: PCFGoodsAddressHandover = Field(..., examples=[])
    PublicationDate: str = Field(..., examples=[], title='Publicationdate')
    ExpirationDate: str = Field(..., examples=[], title='Expirationdate')


class TCFGoodsTransportAddressHandover(BaseModel):
    id_short: str = Field(
        ..., examples=['TCFGoodsTransportAddressHandover'], title='Id Short'
    )
    description: str = Field(
        ...,
        examples=['Indicates the hand-over address of the goods transport '],
        title='Description',
    )
    semantic_id: str = Field(
        ..., examples=['0173-1#02-ABI498#001'], title='Semantic Id'
    )
    Street: str = Field(..., examples=[], title='Street')
    HouseNumber: str = Field(..., examples=[], title='Housenumber')
    ZipCode: str = Field(..., examples=[], title='Zipcode')
    CityTown: str = Field(..., examples=[], title='Citytown')
    Country: str = Field(..., examples=[], title='Country')


class TCFGoodsTransportAddressTakeover(BaseModel):
    id_short: str = Field(
        ..., examples=['TCFGoodsTransportAddressTakeover'], title='Id Short'
    )
    description: str = Field(
        ...,
        examples=['Indication of the place of receipt of goods '],
        title='Description',
    )
    semantic_id: str = Field(
        ..., examples=['0173-1#02-ABI499#001'], title='Semantic Id'
    )
    Street: str = Field(..., examples=[], title='Street')
    HouseNumber: str = Field(..., examples=[], title='Housenumber')
    ZipCode: str = Field(..., examples=[], title='Zipcode')
    CityTown: str = Field(..., examples=[], title='Citytown')
    Country: str = Field(..., examples=[], title='Country')


class TransportCarbonFootprint(BaseModel):
    id_short: str = Field(..., examples=['TransportCarbonFootprint'], title='Id Short')
    description: str = Field(
        ...,
        examples=[
            'Balance of greenhouse gas emissions generated by a transport service of a product'
        ],
        title='Description',
    )
    semantic_id: str = Field(
        ...,
        examples=[
            'https://admin-shell.io/idta/CarbonFootprint/TransportCarbonFootprint/0/9'
        ],
        title='Semantic Id',
    )
    TCFCalculationMethod: str = Field(..., examples=[], title='Tcfcalculationmethod')
    TCFCO2eq: float = Field(..., examples=[], title='Tcfco2Eq')
    TCFReferenceValueForCalculation: str = Field(
        ..., examples=[], title='Tcfreferencevalueforcalculation'
    )
    TCFQuantityOfMeasureForCalculation: float = Field(
        ..., examples=[], title='Tcfquantityofmeasureforcalculation'
    )
    TCFProcessesForGreenhouseGasEmissionInATransportService: str = Field(
        ...,
        examples=[],
        title='Tcfprocessesforgreenhousegasemissioninatransportservice',
    )
    ExplanatoryStatement: None = Field(..., examples=[], title='Explanatorystatement')
    TCFGoodsTransportAddressTakeover: TCFGoodsTransportAddressTakeover = Field(
        ..., examples=[]
    )
    TCFGoodsTransportAddressHandover: TCFGoodsTransportAddressHandover = Field(
        ..., examples=[]
    )
    PublicationDate: str = Field(..., examples=[], title='Publicationdate')
    ExpirationDate: str = Field(..., examples=[], title='Expirationdate')


class CarbonFootprint(BaseModel):
    id_short: str = Field(..., examples=['CarbonFootprint'], title='Id Short')
    description: str = Field(
        ...,
        examples=['The Submodel provides the means to access the Carbon Footprint …'],
        title='Description',
    )
    id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/SubmodelTemplate/CarbonFootprint/0/9'],
        title='Id',
    )
    semantic_id: str = Field(
        ...,
        examples=['https://admin-shell.io/idta/CarbonFootprint/CarbonFootprint/0/9'],
        title='Semantic Id',
    )
    ProductCarbonFootprint: ProductCarbonFootprint = Field(..., examples=[])
    TransportCarbonFootprint: TransportCarbonFootprint = Field(..., examples=[])
