# generated by datamodel-codegen:
#   filename:  AssetInterfaceMappingConfigurationAAS_schema_recreated.json
#   timestamp: 2024-09-28T12:54:14+00:00

from __future__ import annotations

from typing import List, Union
from uuid import UUID

from pydantic import BaseModel, Field


class MappingConfigurations(BaseModel):
    id_short: str = Field(..., examples=['MappingConfigurations'], title='Id Short')
    description: str = Field(..., examples=[''], title='Description')
    semantic_id: str = Field(..., examples=[''], title='Semantic Id')
    interface_reference: Union[str, int, UUID] = Field(
        ..., examples=[], title='Interface Reference'
    )
    mapping_source_sink_relations: List[List[Union[str, int, UUID]]] = Field(
        ..., examples=[], title='Mapping Source Sink Relations'
    )


class AssetInterfacesMappingConfiguration(BaseModel):
    id_short: str = Field(
        ..., examples=['AssetInterfacesMappingConfiguration'], title='Id Short'
    )
    description: str = Field(
        ...,
        examples=[
            'Submodel with id AssetInterfacesMappingConfiguration that contains submodel elements'
        ],
        title='Description',
    )
    id: str = Field(..., examples=['AssetInterfacesMappingConfiguration'], title='Id')
    semantic_id: str = Field(..., examples=[''], title='Semantic Id')
    mapping_configurations: List[MappingConfigurations] = Field(
        ..., examples=[], title='Mapping Configurations'
    )


class AssetInterfaceMappingConfigurationAAS(BaseModel):
    id_short: str = Field(
        ..., examples=['AssetInterfaceMappingConfigurationAAS'], title='Id Short'
    )
    description: str = Field(
        ...,
        examples=[
            'Type aas with id AssetInterfaceMappingConfigurationAAS that contains submodel templates'
        ],
        title='Description',
    )
    id: str = Field(..., examples=['AssetInterfaceMappingConfigurationAAS'], title='Id')
    asset_interfaces_mapping_configuration: AssetInterfacesMappingConfiguration = Field(
        ..., examples=[]
    )
